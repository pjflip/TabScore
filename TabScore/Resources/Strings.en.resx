<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="AllPass" xml:space="preserve">
    <value>All PASS</value>
  </data>
  <data name="ArbitralScore" xml:space="preserve">
    <value>Arbitral score</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Board" xml:space="preserve">
    <value>Board</value>
  </data>
  <data name="Boards" xml:space="preserve">
    <value>Boards</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="ByOnTraveller" xml:space="preserve">
    <value>By</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConfirmResult" xml:space="preserve">
    <value>Confirm result</value>
  </data>
  <data name="Contract" xml:space="preserve">
    <value>Con&amp;shy;tract</value>
  </data>
  <data name="Dealer" xml:space="preserve">
    <value>Dealer</value>
  </data>
  <data name="E" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="East" xml:space="preserve">
    <value>East</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EndScreen" xml:space="preserve">
    <value>End screen</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="EnterContract" xml:space="preserve">
    <value>Enter contract</value>
  </data>
  <data name="EnterEditPlayerIDs" xml:space="preserve">
    <value>Enter/edit player IDs</value>
  </data>
  <data name="EnterID" xml:space="preserve">
    <value>Enter ID for</value>
  </data>
  <data name="EnterLead" xml:space="preserve">
    <value>Enter lead</value>
  </data>
  <data name="EnterPlayerIDs" xml:space="preserve">
    <value>Enter player IDs</value>
  </data>
  <data name="EnterTricksTaken" xml:space="preserve">
    <value>Enter tricks taken</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorDBConnection" xml:space="preserve">
    <value>An error has occurred whilst connecting to the scoring database</value>
  </data>
  <data name="ErrorEnterResult" xml:space="preserve">
    <value>Please enter a result (or Skip = Not played) for every board</value>
  </data>
  <data name="ErrorNoDBSelected" xml:space="preserve">
    <value>No Scoring Database selected; please wait until the Tournament Director tells you to start</value>
  </data>
  <data name="ErrorNoTabScoreDBtxt" xml:space="preserve">
    <value>File TabScoreDB.txt doesn't exist.  Please re-start TabScoreStarter.exe</value>
  </data>
  <data name="ErrorNotAllIDs" xml:space="preserve">
    <value>Please select an ID or 'Unknown' for all players</value>
  </data>
  <data name="ErrorPermanentDB" xml:space="preserve">
    <value>Permanent database connection error.  Please check format and access permissions for Scoring Database file, and re-start TabScoreStarter.exe</value>
  </data>
  <data name="ErrorReestablishConnection" xml:space="preserve">
    <value>Please press OK to try to re-establish the connection.  If successful, please re-register this tablet to your [section/]table number[/direction]</value>
  </data>
  <data name="ErrorScreen" xml:space="preserve">
    <value>Error screen</value>
  </data>
  <data name="ErrorTableNotReady1" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="ErrorTableNotReady2" xml:space="preserve">
    <value>is not yet ready.  Please wait</value>
  </data>
  <data name="ErrorTableRegistered1" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="ErrorTableRegistered2" xml:space="preserve">
    <value>and direction</value>
  </data>
  <data name="ErrorTableRegistered3" xml:space="preserve">
    <value>is already registered.  Do not press Register unless you intend to re-register a tablet device at your current location</value>
  </data>
  <data name="ErrorWaitAllIDs" xml:space="preserve">
    <value>Please wait until all the player IDs for this table have been entered</value>
  </data>
  <data name="ErrorWaitResult" xml:space="preserve">
    <value>Please wait until there is a result entered for this board</value>
  </data>
  <data name="ErrorWaitResults" xml:space="preserve">
    <value>Please wait until there are results entered for every board</value>
  </data>
  <data name="ForSwiss" xml:space="preserve">
    <value>For Swiss events, wait until the TD tells you and then press OK to get the new movement</value>
  </data>
  <data name="IfFinished" xml:space="preserve">
    <value>If the event is finished, you can turn off the tablet device</value>
  </data>
  <data name="J" xml:space="preserve">
    <value>J</value>
  </data>
  <data name="K" xml:space="preserve">
    <value>K</value>
  </data>
  <data name="Lead" xml:space="preserve">
    <value>Lead</value>
  </data>
  <data name="LeadNoMatch" xml:space="preserve">
    <value>Lead does not match hand record</value>
  </data>
  <data name="MoveForRound" xml:space="preserve">
    <value>Move for Round</value>
  </data>
  <data name="MoveToSitOut" xml:space="preserve">
    <value>Move to sit-out</value>
  </data>
  <data name="MoveToTable" xml:space="preserve">
    <value>Move to Table</value>
  </data>
  <data name="N" xml:space="preserve">
    <value>N</value>
  </data>
  <data name="NeedAllIDs" xml:space="preserve">
    <value>Please enter all the player IDs before pressing OK</value>
  </data>
  <data name="North" xml:space="preserve">
    <value>North</value>
  </data>
  <data name="NotPlayed" xml:space="preserve">
    <value>Not played</value>
  </data>
  <data name="NotScoring" xml:space="preserve">
    <value>This tablet device is not being used for scoring during this round.  Once a board has been scored, you can view it using the buttons below</value>
  </data>
  <data name="NT" xml:space="preserve">
    <value>NT</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Pair" xml:space="preserve">
    <value>Pair</value>
  </data>
  <data name="PairNumber" xml:space="preserve">
    <value>Pair No.</value>
  </data>
  <data name="Pass" xml:space="preserve">
    <value>PASS</value>
  </data>
  <data name="PassToRelayTable" xml:space="preserve">
    <value>Pass to relay table</value>
  </data>
  <data name="PassToTable" xml:space="preserve">
    <value>Pass to Table</value>
  </data>
  <data name="Percentage" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="PercentageShort" xml:space="preserve">
    <value>%age</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Player</value>
  </data>
  <data name="PlayerNumber" xml:space="preserve">
    <value>Player ID</value>
  </data>
  <data name="Q" xml:space="preserve">
    <value>Q</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="RankingList" xml:space="preserve">
    <value>Ranking list</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Round</value>
  </data>
  <data name="S" xml:space="preserve">
    <value>S</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="ScoreEntryComplete" xml:space="preserve">
    <value>Score entry complete</value>
  </data>
  <data name="Section" xml:space="preserve">
    <value>Section</value>
  </data>
  <data name="SelectDirection" xml:space="preserve">
    <value>Select direction</value>
  </data>
  <data name="SelectSection" xml:space="preserve">
    <value>Select section</value>
  </data>
  <data name="SelectTableNumber" xml:space="preserve">
    <value>Select table number</value>
  </data>
  <data name="ShowBoards" xml:space="preserve">
    <value>Show boards</value>
  </data>
  <data name="ShowFinalRankingList" xml:space="preserve">
    <value>Show final ranking list</value>
  </data>
  <data name="ShowHandRecord" xml:space="preserve">
    <value>Show hand record</value>
  </data>
  <data name="ShowMove" xml:space="preserve">
    <value>Show move</value>
  </data>
  <data name="ShowPlayerIDs" xml:space="preserve">
    <value>Show player IDs</value>
  </data>
  <data name="ShowRankingList" xml:space="preserve">
    <value>Show ranking list</value>
  </data>
  <data name="ShowRoundInfo" xml:space="preserve">
    <value>Show round info</value>
  </data>
  <data name="ShowTraveller" xml:space="preserve">
    <value>Show traveller</value>
  </data>
  <data name="Sitout" xml:space="preserve">
    <value>Sitout</value>
  </data>
  <data name="SittingOut" xml:space="preserve">
    <value>Sitting out</value>
  </data>
  <data name="SittingOutNoTable" xml:space="preserve">
    <value>Sitting out away from the numbered tables</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="South" xml:space="preserve">
    <value>South</value>
  </data>
  <data name="StayAtTable" xml:space="preserve">
    <value>Stay at Table</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="TenShorthand" xml:space="preserve">
    <value>T</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Traveller" xml:space="preserve">
    <value>Traveller</value>
  </data>
  <data name="Tricks" xml:space="preserve">
    <value>Tricks</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="W" xml:space="preserve">
    <value>W</value>
  </data>
  <data name="WaitNextTable" xml:space="preserve">
    <value>Please wait until the TD calls the move, and then move to the next table before pressing OK</value>
  </data>
  <data name="WaitTD" xml:space="preserve">
    <value>Please wait until the Tournament Director tells you to start, and then press OK</value>
  </data>
  <data name="WaitThisTable" xml:space="preserve">
    <value>Please wait until the TD calls the move and this table is ready to start before pressing OK</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="West" xml:space="preserve">
    <value>West</value>
  </data>
  <data name="EnterHandRecord" xml:space="preserve">
    <value>Enter Board</value>
  </data>
  <data name="WarningHandRecordBack" xml:space="preserve">
    <value>All hand record entries for this board will be lost.  Click on 'Back' to continue</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="EnterHandRecord2" xml:space="preserve">
    <value> </value>
  </data>
  <data name="FromRelayTable" xml:space="preserve">
    <value>from Relay Table</value>
  </data>
  <data name="FromTable" xml:space="preserve">
    <value>from Table</value>
  </data>
</root>